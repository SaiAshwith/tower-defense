### YamlMime:ManagedReference
items:
- uid: Global.SerializableDictionaryBase`3
  commentId: T:Global.SerializableDictionaryBase`3
  id: SerializableDictionaryBase`3
  parent: Global
  children:
  - Global.SerializableDictionaryBase`3.#ctor
  - Global.SerializableDictionaryBase`3.#ctor(System.Collections.Generic.IDictionary{`0,`1})
  - Global.SerializableDictionaryBase`3.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - Global.SerializableDictionaryBase`3.CopyFrom(System.Collections.Generic.IDictionary{`0,`1})
  - Global.SerializableDictionaryBase`3.GetValue(`2[],System.Int32)
  - Global.SerializableDictionaryBase`3.OnAfterDeserialize
  - Global.SerializableDictionaryBase`3.OnBeforeSerialize
  - Global.SerializableDictionaryBase`3.SetValue(`2[],System.Int32,`1)
  langs:
  - csharp
  - vb
  name: SerializableDictionaryBase<TKey, TValue, TValueStorage>
  nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>
  fullName: SerializableDictionaryBase<TKey, TValue, TValueStorage>
  type: Class
  source:
    id: SerializableDictionaryBase
    path: D:\GitProjects\tower-defense\Assets\SerializableDictionary.cs
    startLine: 6
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: 'public abstract class SerializableDictionaryBase<TKey, TValue, TValueStorage> : Dictionary<TKey, TValue>, IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IReadOnlyDictionary<TKey, TValue>, IReadOnlyCollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable, ISerializationCallbackReceiver'
    typeParameters:
    - id: TKey
    - id: TValue
    - id: TValueStorage
    content.vb: >-
      Public MustInherit Class SerializableDictionaryBase(Of TKey, TValue, TValueStorage)

          Inherits Dictionary(Of TKey, TValue)

          Implements IDictionary(Of TKey, TValue), ICollection(Of KeyValuePair(Of TKey, TValue)), IReadOnlyDictionary(Of TKey, TValue), IReadOnlyCollection(Of KeyValuePair(Of TKey, TValue)), IEnumerable(Of KeyValuePair(Of TKey, TValue)), IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable, ISerializationCallbackReceiver
  inheritance:
  - System.Object
  - System.Collections.Generic.Dictionary{{TKey},{TValue}}
  derivedClasses:
  - Global.SerializableDictionary`2
  - Global.SerializableDictionary`3
  nameWithType.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage)
  name.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage)
- uid: Global.SerializableDictionaryBase`3.#ctor
  commentId: M:Global.SerializableDictionaryBase`3.#ctor
  id: '#ctor'
  parent: Global.SerializableDictionaryBase`3
  langs:
  - csharp
  - vb
  name: SerializableDictionaryBase()
  nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.SerializableDictionaryBase()
  fullName: SerializableDictionaryBase<TKey, TValue, TValueStorage>.SerializableDictionaryBase()
  type: Constructor
  source:
    id: .ctor
    path: D:\GitProjects\tower-defense\Assets\SerializableDictionary.cs
    startLine: 13
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public SerializableDictionaryBase()
    content.vb: Public Sub New
  overload: Global.SerializableDictionaryBase`3.#ctor*
  nameWithType.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SerializableDictionaryBase()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SerializableDictionaryBase()
- uid: Global.SerializableDictionaryBase`3.#ctor(System.Collections.Generic.IDictionary{`0,`1})
  commentId: M:Global.SerializableDictionaryBase`3.#ctor(System.Collections.Generic.IDictionary{`0,`1})
  id: '#ctor(System.Collections.Generic.IDictionary{`0,`1})'
  parent: Global.SerializableDictionaryBase`3
  langs:
  - csharp
  - vb
  name: SerializableDictionaryBase(IDictionary<TKey, TValue>)
  nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.SerializableDictionaryBase(IDictionary<TKey, TValue>)
  fullName: SerializableDictionaryBase<TKey, TValue, TValueStorage>.SerializableDictionaryBase(System.Collections.Generic.IDictionary<TKey, TValue>)
  type: Constructor
  source:
    id: .ctor
    path: D:\GitProjects\tower-defense\Assets\SerializableDictionary.cs
    startLine: 17
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public SerializableDictionaryBase(IDictionary<TKey, TValue> dict)
    parameters:
    - id: dict
      type: System.Collections.Generic.IDictionary{{TKey},{TValue}}
    content.vb: Public Sub New(dict As IDictionary(Of TKey, TValue))
  overload: Global.SerializableDictionaryBase`3.#ctor*
  nameWithType.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SerializableDictionaryBase(IDictionary(Of TKey, TValue))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SerializableDictionaryBase(System.Collections.Generic.IDictionary(Of TKey, TValue))
  name.vb: SerializableDictionaryBase(IDictionary(Of TKey, TValue))
- uid: Global.SerializableDictionaryBase`3.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:Global.SerializableDictionaryBase`3.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: Global.SerializableDictionaryBase`3
  langs:
  - csharp
  - vb
  name: SerializableDictionaryBase(SerializationInfo, StreamingContext)
  nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.SerializableDictionaryBase(SerializationInfo, StreamingContext)
  fullName: SerializableDictionaryBase<TKey, TValue, TValueStorage>.SerializableDictionaryBase(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Constructor
  source:
    id: .ctor
    path: D:\GitProjects\tower-defense\Assets\SerializableDictionary.cs
    startLine: 25
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected SerializableDictionaryBase(SerializationInfo info, StreamingContext context)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
    - id: context
      type: System.Runtime.Serialization.StreamingContext
    content.vb: Protected Sub New(info As SerializationInfo, context As StreamingContext)
  overload: Global.SerializableDictionaryBase`3.#ctor*
  nameWithType.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SerializableDictionaryBase(SerializationInfo, StreamingContext)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SerializableDictionaryBase(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
- uid: Global.SerializableDictionaryBase`3.SetValue(`2[],System.Int32,`1)
  commentId: M:Global.SerializableDictionaryBase`3.SetValue(`2[],System.Int32,`1)
  id: SetValue(`2[],System.Int32,`1)
  parent: Global.SerializableDictionaryBase`3
  langs:
  - csharp
  - vb
  name: SetValue(TValueStorage[], Int32, TValue)
  nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.SetValue(TValueStorage[], Int32, TValue)
  fullName: SerializableDictionaryBase<TKey, TValue, TValueStorage>.SetValue(TValueStorage[], System.Int32, TValue)
  type: Method
  source:
    id: SetValue
    path: D:\GitProjects\tower-defense\Assets\SerializableDictionary.cs
    startLine: 27
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected abstract void SetValue(TValueStorage[] storage, int i, TValue value)
    parameters:
    - id: storage
      type: '{TValueStorage}[]'
    - id: i
      type: System.Int32
    - id: value
      type: '{TValue}'
    content.vb: Protected MustOverride Sub SetValue(storage As TValueStorage(), i As Integer, value As TValue)
  overload: Global.SerializableDictionaryBase`3.SetValue*
  nameWithType.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SetValue(TValueStorage(), Int32, TValue)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SetValue(TValueStorage(), System.Int32, TValue)
  name.vb: SetValue(TValueStorage(), Int32, TValue)
- uid: Global.SerializableDictionaryBase`3.GetValue(`2[],System.Int32)
  commentId: M:Global.SerializableDictionaryBase`3.GetValue(`2[],System.Int32)
  id: GetValue(`2[],System.Int32)
  parent: Global.SerializableDictionaryBase`3
  langs:
  - csharp
  - vb
  name: GetValue(TValueStorage[], Int32)
  nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.GetValue(TValueStorage[], Int32)
  fullName: SerializableDictionaryBase<TKey, TValue, TValueStorage>.GetValue(TValueStorage[], System.Int32)
  type: Method
  source:
    id: GetValue
    path: D:\GitProjects\tower-defense\Assets\SerializableDictionary.cs
    startLine: 28
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected abstract TValue GetValue(TValueStorage[] storage, int i)
    parameters:
    - id: storage
      type: '{TValueStorage}[]'
    - id: i
      type: System.Int32
    return:
      type: '{TValue}'
    content.vb: Protected MustOverride Function GetValue(storage As TValueStorage(), i As Integer) As TValue
  overload: Global.SerializableDictionaryBase`3.GetValue*
  nameWithType.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).GetValue(TValueStorage(), Int32)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).GetValue(TValueStorage(), System.Int32)
  name.vb: GetValue(TValueStorage(), Int32)
- uid: Global.SerializableDictionaryBase`3.CopyFrom(System.Collections.Generic.IDictionary{`0,`1})
  commentId: M:Global.SerializableDictionaryBase`3.CopyFrom(System.Collections.Generic.IDictionary{`0,`1})
  id: CopyFrom(System.Collections.Generic.IDictionary{`0,`1})
  parent: Global.SerializableDictionaryBase`3
  langs:
  - csharp
  - vb
  name: CopyFrom(IDictionary<TKey, TValue>)
  nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.CopyFrom(IDictionary<TKey, TValue>)
  fullName: SerializableDictionaryBase<TKey, TValue, TValueStorage>.CopyFrom(System.Collections.Generic.IDictionary<TKey, TValue>)
  type: Method
  source:
    id: CopyFrom
    path: D:\GitProjects\tower-defense\Assets\SerializableDictionary.cs
    startLine: 30
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void CopyFrom(IDictionary<TKey, TValue> dict)
    parameters:
    - id: dict
      type: System.Collections.Generic.IDictionary{{TKey},{TValue}}
    content.vb: Public Sub CopyFrom(dict As IDictionary(Of TKey, TValue))
  overload: Global.SerializableDictionaryBase`3.CopyFrom*
  nameWithType.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).CopyFrom(IDictionary(Of TKey, TValue))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).CopyFrom(System.Collections.Generic.IDictionary(Of TKey, TValue))
  name.vb: CopyFrom(IDictionary(Of TKey, TValue))
- uid: Global.SerializableDictionaryBase`3.OnAfterDeserialize
  commentId: M:Global.SerializableDictionaryBase`3.OnAfterDeserialize
  id: OnAfterDeserialize
  parent: Global.SerializableDictionaryBase`3
  langs:
  - csharp
  - vb
  name: OnAfterDeserialize()
  nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnAfterDeserialize()
  fullName: SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnAfterDeserialize()
  type: Method
  source:
    id: OnAfterDeserialize
    path: D:\GitProjects\tower-defense\Assets\SerializableDictionary.cs
    startLine: 39
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void OnAfterDeserialize()
    content.vb: Public Sub OnAfterDeserialize
  overload: Global.SerializableDictionaryBase`3.OnAfterDeserialize*
  nameWithType.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnAfterDeserialize()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnAfterDeserialize()
- uid: Global.SerializableDictionaryBase`3.OnBeforeSerialize
  commentId: M:Global.SerializableDictionaryBase`3.OnBeforeSerialize
  id: OnBeforeSerialize
  parent: Global.SerializableDictionaryBase`3
  langs:
  - csharp
  - vb
  name: OnBeforeSerialize()
  nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnBeforeSerialize()
  fullName: SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnBeforeSerialize()
  type: Method
  source:
    id: OnBeforeSerialize
    path: D:\GitProjects\tower-defense\Assets\SerializableDictionary.cs
    startLine: 56
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void OnBeforeSerialize()
    content.vb: Public Sub OnBeforeSerialize
  overload: Global.SerializableDictionaryBase`3.OnBeforeSerialize*
  nameWithType.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnBeforeSerialize()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnBeforeSerialize()
references:
- uid: Global
  name: Global
  nameWithType: Global
  fullName: Global
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.Dictionary{{TKey},{TValue}}
  commentId: T:System.Collections.Generic.Dictionary{`0,`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Global.SerializableDictionaryBase`3.#ctor*
  commentId: Overload:Global.SerializableDictionaryBase`3.#ctor
  name: SerializableDictionaryBase
  nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.SerializableDictionaryBase
  fullName: SerializableDictionaryBase<TKey, TValue, TValueStorage>.SerializableDictionaryBase
  nameWithType.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SerializableDictionaryBase
  fullName.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SerializableDictionaryBase
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  commentId: T:System.Collections.Generic.IDictionary{`0,`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Serialization.SerializationInfo
  commentId: T:System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: true
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  commentId: T:System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: Global.SerializableDictionaryBase`3.SetValue*
  commentId: Overload:Global.SerializableDictionaryBase`3.SetValue
  name: SetValue
  nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.SetValue
  fullName: SerializableDictionaryBase<TKey, TValue, TValueStorage>.SetValue
  nameWithType.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SetValue
  fullName.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SetValue
- uid: '{TValueStorage}[]'
  isExternal: true
  name: TValueStorage[]
  nameWithType: TValueStorage[]
  fullName: TValueStorage[]
  nameWithType.vb: TValueStorage()
  fullName.vb: TValueStorage()
  name.vb: TValueStorage()
  spec.csharp:
  - name: TValueStorage
    nameWithType: TValueStorage
    fullName: TValueStorage
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - name: TValueStorage
    nameWithType: TValueStorage
    fullName: TValueStorage
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: '{TValue}'
  commentId: '!:TValue'
  definition: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: Global.SerializableDictionaryBase`3.GetValue*
  commentId: Overload:Global.SerializableDictionaryBase`3.GetValue
  name: GetValue
  nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.GetValue
  fullName: SerializableDictionaryBase<TKey, TValue, TValueStorage>.GetValue
  nameWithType.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).GetValue
  fullName.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).GetValue
- uid: Global.SerializableDictionaryBase`3.CopyFrom*
  commentId: Overload:Global.SerializableDictionaryBase`3.CopyFrom
  name: CopyFrom
  nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.CopyFrom
  fullName: SerializableDictionaryBase<TKey, TValue, TValueStorage>.CopyFrom
  nameWithType.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).CopyFrom
  fullName.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).CopyFrom
- uid: Global.SerializableDictionaryBase`3.OnAfterDeserialize*
  commentId: Overload:Global.SerializableDictionaryBase`3.OnAfterDeserialize
  name: OnAfterDeserialize
  nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnAfterDeserialize
  fullName: SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnAfterDeserialize
  nameWithType.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnAfterDeserialize
  fullName.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnAfterDeserialize
- uid: Global.SerializableDictionaryBase`3.OnBeforeSerialize*
  commentId: Overload:Global.SerializableDictionaryBase`3.OnBeforeSerialize
  name: OnBeforeSerialize
  nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnBeforeSerialize
  fullName: SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnBeforeSerialize
  nameWithType.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnBeforeSerialize
  fullName.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnBeforeSerialize
