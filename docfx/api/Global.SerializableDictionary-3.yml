### YamlMime:ManagedReference
items:
- uid: Global.SerializableDictionary`3
  commentId: T:Global.SerializableDictionary`3
  id: SerializableDictionary`3
  parent: Global
  children:
  - Global.SerializableDictionary`3.#ctor
  - Global.SerializableDictionary`3.#ctor(System.Collections.Generic.IDictionary{`0,`1})
  - Global.SerializableDictionary`3.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - Global.SerializableDictionary`3.GetValue(`2[],System.Int32)
  - Global.SerializableDictionary`3.SetValue(`2[],System.Int32,`1)
  langs:
  - csharp
  - vb
  name: SerializableDictionary<TKey, TValue, TValueStorage>
  nameWithType: SerializableDictionary<TKey, TValue, TValueStorage>
  fullName: SerializableDictionary<TKey, TValue, TValueStorage>
  type: Class
  source:
    id: SerializableDictionary
    path: D:\GitProjects\tower-defense\Assets\SerializableDictionary.cs
    startLine: 103
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: 'public class SerializableDictionary<TKey, TValue, TValueStorage> : SerializableDictionaryBase<TKey, TValue, TValueStorage>, IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IReadOnlyDictionary<TKey, TValue>, IReadOnlyCollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable, ISerializationCallbackReceiver where TValueStorage : SerializableDictionary.Storage<TValue>, new()'
    typeParameters:
    - id: TKey
    - id: TValue
    - id: TValueStorage
    content.vb: >-
      Public Class SerializableDictionary(Of TKey, TValue, TValueStorage As {SerializableDictionary.Storage(Of TValue), New})

          Inherits SerializableDictionaryBase(Of TKey, TValue, TValueStorage)

          Implements IDictionary(Of TKey, TValue), ICollection(Of KeyValuePair(Of TKey, TValue)), IReadOnlyDictionary(Of TKey, TValue), IReadOnlyCollection(Of KeyValuePair(Of TKey, TValue)), IEnumerable(Of KeyValuePair(Of TKey, TValue)), IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable, ISerializationCallbackReceiver
  inheritance:
  - System.Object
  - System.Collections.Generic.Dictionary{{TKey},{TValue}}
  - Global.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}
  inheritedMembers:
  - Global.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.SetValue({TValueStorage}[],System.Int32,{TValue})
  - Global.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.GetValue({TValueStorage}[],System.Int32)
  - Global.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.CopyFrom(System.Collections.Generic.IDictionary{{TKey},{TValue}})
  - Global.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.OnAfterDeserialize
  - Global.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.OnBeforeSerialize
  nameWithType.vb: SerializableDictionary(Of TKey, TValue, TValueStorage)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: SerializableDictionary(Of TKey, TValue, TValueStorage)
  name.vb: SerializableDictionary(Of TKey, TValue, TValueStorage)
- uid: Global.SerializableDictionary`3.#ctor
  commentId: M:Global.SerializableDictionary`3.#ctor
  id: '#ctor'
  parent: Global.SerializableDictionary`3
  langs:
  - csharp
  - vb
  name: SerializableDictionary()
  nameWithType: SerializableDictionary<TKey, TValue, TValueStorage>.SerializableDictionary()
  fullName: SerializableDictionary<TKey, TValue, TValueStorage>.SerializableDictionary()
  type: Constructor
  source:
    id: .ctor
    path: D:\GitProjects\tower-defense\Assets\SerializableDictionary.cs
    startLine: 105
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public SerializableDictionary()
    content.vb: Public Sub New
  overload: Global.SerializableDictionary`3.#ctor*
  nameWithType.vb: SerializableDictionary(Of TKey, TValue, TValueStorage).SerializableDictionary()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SerializableDictionary(Of TKey, TValue, TValueStorage).SerializableDictionary()
- uid: Global.SerializableDictionary`3.#ctor(System.Collections.Generic.IDictionary{`0,`1})
  commentId: M:Global.SerializableDictionary`3.#ctor(System.Collections.Generic.IDictionary{`0,`1})
  id: '#ctor(System.Collections.Generic.IDictionary{`0,`1})'
  parent: Global.SerializableDictionary`3
  langs:
  - csharp
  - vb
  name: SerializableDictionary(IDictionary<TKey, TValue>)
  nameWithType: SerializableDictionary<TKey, TValue, TValueStorage>.SerializableDictionary(IDictionary<TKey, TValue>)
  fullName: SerializableDictionary<TKey, TValue, TValueStorage>.SerializableDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)
  type: Constructor
  source:
    id: .ctor
    path: D:\GitProjects\tower-defense\Assets\SerializableDictionary.cs
    startLine: 109
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public SerializableDictionary(IDictionary<TKey, TValue> dict)
    parameters:
    - id: dict
      type: System.Collections.Generic.IDictionary{{TKey},{TValue}}
    content.vb: Public Sub New(dict As IDictionary(Of TKey, TValue))
  overload: Global.SerializableDictionary`3.#ctor*
  nameWithType.vb: SerializableDictionary(Of TKey, TValue, TValueStorage).SerializableDictionary(IDictionary(Of TKey, TValue))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SerializableDictionary(Of TKey, TValue, TValueStorage).SerializableDictionary(System.Collections.Generic.IDictionary(Of TKey, TValue))
  name.vb: SerializableDictionary(IDictionary(Of TKey, TValue))
- uid: Global.SerializableDictionary`3.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:Global.SerializableDictionary`3.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: Global.SerializableDictionary`3
  langs:
  - csharp
  - vb
  name: SerializableDictionary(SerializationInfo, StreamingContext)
  nameWithType: SerializableDictionary<TKey, TValue, TValueStorage>.SerializableDictionary(SerializationInfo, StreamingContext)
  fullName: SerializableDictionary<TKey, TValue, TValueStorage>.SerializableDictionary(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Constructor
  source:
    id: .ctor
    path: D:\GitProjects\tower-defense\Assets\SerializableDictionary.cs
    startLine: 113
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected SerializableDictionary(SerializationInfo info, StreamingContext context)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
    - id: context
      type: System.Runtime.Serialization.StreamingContext
    content.vb: Protected Sub New(info As SerializationInfo, context As StreamingContext)
  overload: Global.SerializableDictionary`3.#ctor*
  nameWithType.vb: SerializableDictionary(Of TKey, TValue, TValueStorage).SerializableDictionary(SerializationInfo, StreamingContext)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: SerializableDictionary(Of TKey, TValue, TValueStorage).SerializableDictionary(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
- uid: Global.SerializableDictionary`3.GetValue(`2[],System.Int32)
  commentId: M:Global.SerializableDictionary`3.GetValue(`2[],System.Int32)
  id: GetValue(`2[],System.Int32)
  parent: Global.SerializableDictionary`3
  langs:
  - csharp
  - vb
  name: GetValue(TValueStorage[], Int32)
  nameWithType: SerializableDictionary<TKey, TValue, TValueStorage>.GetValue(TValueStorage[], Int32)
  fullName: SerializableDictionary<TKey, TValue, TValueStorage>.GetValue(TValueStorage[], System.Int32)
  type: Method
  source:
    id: GetValue
    path: D:\GitProjects\tower-defense\Assets\SerializableDictionary.cs
    startLine: 115
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected override TValue GetValue(TValueStorage[] storage, int i)
    parameters:
    - id: storage
      type: '{TValueStorage}[]'
    - id: i
      type: System.Int32
    return:
      type: '{TValue}'
    content.vb: Protected Overrides Function GetValue(storage As TValueStorage(), i As Integer) As TValue
  overridden: Global.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.GetValue({TValueStorage}[],System.Int32)
  overload: Global.SerializableDictionary`3.GetValue*
  nameWithType.vb: SerializableDictionary(Of TKey, TValue, TValueStorage).GetValue(TValueStorage(), Int32)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: SerializableDictionary(Of TKey, TValue, TValueStorage).GetValue(TValueStorage(), System.Int32)
  name.vb: GetValue(TValueStorage(), Int32)
- uid: Global.SerializableDictionary`3.SetValue(`2[],System.Int32,`1)
  commentId: M:Global.SerializableDictionary`3.SetValue(`2[],System.Int32,`1)
  id: SetValue(`2[],System.Int32,`1)
  parent: Global.SerializableDictionary`3
  langs:
  - csharp
  - vb
  name: SetValue(TValueStorage[], Int32, TValue)
  nameWithType: SerializableDictionary<TKey, TValue, TValueStorage>.SetValue(TValueStorage[], Int32, TValue)
  fullName: SerializableDictionary<TKey, TValue, TValueStorage>.SetValue(TValueStorage[], System.Int32, TValue)
  type: Method
  source:
    id: SetValue
    path: D:\GitProjects\tower-defense\Assets\SerializableDictionary.cs
    startLine: 120
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected override void SetValue(TValueStorage[] storage, int i, TValue value)
    parameters:
    - id: storage
      type: '{TValueStorage}[]'
    - id: i
      type: System.Int32
    - id: value
      type: '{TValue}'
    content.vb: Protected Overrides Sub SetValue(storage As TValueStorage(), i As Integer, value As TValue)
  overridden: Global.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.SetValue({TValueStorage}[],System.Int32,{TValue})
  overload: Global.SerializableDictionary`3.SetValue*
  nameWithType.vb: SerializableDictionary(Of TKey, TValue, TValueStorage).SetValue(TValueStorage(), Int32, TValue)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: SerializableDictionary(Of TKey, TValue, TValueStorage).SetValue(TValueStorage(), System.Int32, TValue)
  name.vb: SetValue(TValueStorage(), Int32, TValue)
references:
- uid: Global
  name: Global
  nameWithType: Global
  fullName: Global
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.Dictionary{{TKey},{TValue}}
  commentId: T:System.Collections.Generic.Dictionary{`0,`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}
  commentId: T:Global.SerializableDictionaryBase{`0,`1,`2}
  definition: Global.SerializableDictionaryBase`3
  name: SerializableDictionaryBase<TKey, TValue, TValueStorage>
  nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>
  fullName: SerializableDictionaryBase<TKey, TValue, TValueStorage>
  nameWithType.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage)
  fullName.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage)
  name.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage)
  spec.csharp:
  - uid: Global.SerializableDictionaryBase`3
    name: SerializableDictionaryBase
    nameWithType: SerializableDictionaryBase
    fullName: SerializableDictionaryBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValueStorage
    nameWithType: TValueStorage
    fullName: TValueStorage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.SerializableDictionaryBase`3
    name: SerializableDictionaryBase
    nameWithType: SerializableDictionaryBase
    fullName: SerializableDictionaryBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValueStorage
    nameWithType: TValueStorage
    fullName: TValueStorage
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.SetValue({TValueStorage}[],System.Int32,{TValue})
  commentId: M:Global.SerializableDictionaryBase{`0,`1,`2}.SetValue(`2[],System.Int32,`1)
  parent: Global.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}
  definition: Global.SerializableDictionaryBase`3.SetValue(`2[],System.Int32,`1)
  name: SetValue(TValueStorage[], Int32, TValue)
  nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.SetValue(TValueStorage[], Int32, TValue)
  fullName: SerializableDictionaryBase<TKey, TValue, TValueStorage>.SetValue(TValueStorage[], System.Int32, TValue)
  nameWithType.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SetValue(TValueStorage(), Int32, TValue)
  fullName.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SetValue(TValueStorage(), System.Int32, TValue)
  name.vb: SetValue(TValueStorage(), Int32, TValue)
  spec.csharp:
  - uid: Global.SerializableDictionaryBase`3.SetValue(`2[],System.Int32,`1)
    name: SetValue
    nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.SetValue
    fullName: SerializableDictionaryBase<TKey, TValue, TValueStorage>.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - name: TValueStorage
    nameWithType: TValueStorage
    fullName: TValueStorage
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.SerializableDictionaryBase`3.SetValue(`2[],System.Int32,`1)
    name: SetValue
    nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SetValue
    fullName: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SetValue
  - name: (
    nameWithType: (
    fullName: (
  - name: TValueStorage
    nameWithType: TValueStorage
    fullName: TValueStorage
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.GetValue({TValueStorage}[],System.Int32)
  commentId: M:Global.SerializableDictionaryBase{`0,`1,`2}.GetValue(`2[],System.Int32)
  parent: Global.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}
  definition: Global.SerializableDictionaryBase`3.GetValue(`2[],System.Int32)
  name: GetValue(TValueStorage[], Int32)
  nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.GetValue(TValueStorage[], Int32)
  fullName: SerializableDictionaryBase<TKey, TValue, TValueStorage>.GetValue(TValueStorage[], System.Int32)
  nameWithType.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).GetValue(TValueStorage(), Int32)
  fullName.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).GetValue(TValueStorage(), System.Int32)
  name.vb: GetValue(TValueStorage(), Int32)
  spec.csharp:
  - uid: Global.SerializableDictionaryBase`3.GetValue(`2[],System.Int32)
    name: GetValue
    nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.GetValue
    fullName: SerializableDictionaryBase<TKey, TValue, TValueStorage>.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - name: TValueStorage
    nameWithType: TValueStorage
    fullName: TValueStorage
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.SerializableDictionaryBase`3.GetValue(`2[],System.Int32)
    name: GetValue
    nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).GetValue
    fullName: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).GetValue
  - name: (
    nameWithType: (
    fullName: (
  - name: TValueStorage
    nameWithType: TValueStorage
    fullName: TValueStorage
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.CopyFrom(System.Collections.Generic.IDictionary{{TKey},{TValue}})
  commentId: M:Global.SerializableDictionaryBase{`0,`1,`2}.CopyFrom(System.Collections.Generic.IDictionary{`0,`1})
  parent: Global.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}
  definition: Global.SerializableDictionaryBase`3.CopyFrom(System.Collections.Generic.IDictionary{`0,`1})
  name: CopyFrom(IDictionary<TKey, TValue>)
  nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.CopyFrom(IDictionary<TKey, TValue>)
  fullName: SerializableDictionaryBase<TKey, TValue, TValueStorage>.CopyFrom(System.Collections.Generic.IDictionary<TKey, TValue>)
  nameWithType.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).CopyFrom(IDictionary(Of TKey, TValue))
  fullName.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).CopyFrom(System.Collections.Generic.IDictionary(Of TKey, TValue))
  name.vb: CopyFrom(IDictionary(Of TKey, TValue))
  spec.csharp:
  - uid: Global.SerializableDictionaryBase`3.CopyFrom(System.Collections.Generic.IDictionary{`0,`1})
    name: CopyFrom
    nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.CopyFrom
    fullName: SerializableDictionaryBase<TKey, TValue, TValueStorage>.CopyFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.SerializableDictionaryBase`3.CopyFrom(System.Collections.Generic.IDictionary{`0,`1})
    name: CopyFrom
    nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).CopyFrom
    fullName: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).CopyFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.OnAfterDeserialize
  commentId: M:Global.SerializableDictionaryBase{`0,`1,`2}.OnAfterDeserialize
  parent: Global.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}
  definition: Global.SerializableDictionaryBase`3.OnAfterDeserialize
  name: OnAfterDeserialize()
  nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnAfterDeserialize()
  fullName: SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnAfterDeserialize()
  nameWithType.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnAfterDeserialize()
  fullName.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnAfterDeserialize()
  spec.csharp:
  - uid: Global.SerializableDictionaryBase`3.OnAfterDeserialize
    name: OnAfterDeserialize
    nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnAfterDeserialize
    fullName: SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnAfterDeserialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.SerializableDictionaryBase`3.OnAfterDeserialize
    name: OnAfterDeserialize
    nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnAfterDeserialize
    fullName: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnAfterDeserialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.OnBeforeSerialize
  commentId: M:Global.SerializableDictionaryBase{`0,`1,`2}.OnBeforeSerialize
  parent: Global.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}
  definition: Global.SerializableDictionaryBase`3.OnBeforeSerialize
  name: OnBeforeSerialize()
  nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnBeforeSerialize()
  fullName: SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnBeforeSerialize()
  nameWithType.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnBeforeSerialize()
  fullName.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnBeforeSerialize()
  spec.csharp:
  - uid: Global.SerializableDictionaryBase`3.OnBeforeSerialize
    name: OnBeforeSerialize
    nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnBeforeSerialize
    fullName: SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnBeforeSerialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.SerializableDictionaryBase`3.OnBeforeSerialize
    name: OnBeforeSerialize
    nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnBeforeSerialize
    fullName: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnBeforeSerialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Global.SerializableDictionaryBase`3
  commentId: T:Global.SerializableDictionaryBase`3
  name: SerializableDictionaryBase<TKey, TValue, TValueStorage>
  nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>
  fullName: SerializableDictionaryBase<TKey, TValue, TValueStorage>
  nameWithType.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage)
  fullName.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage)
  name.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage)
  spec.csharp:
  - uid: Global.SerializableDictionaryBase`3
    name: SerializableDictionaryBase
    nameWithType: SerializableDictionaryBase
    fullName: SerializableDictionaryBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValueStorage
    nameWithType: TValueStorage
    fullName: TValueStorage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.SerializableDictionaryBase`3
    name: SerializableDictionaryBase
    nameWithType: SerializableDictionaryBase
    fullName: SerializableDictionaryBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValueStorage
    nameWithType: TValueStorage
    fullName: TValueStorage
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.SerializableDictionaryBase`3.SetValue(`2[],System.Int32,`1)
  commentId: M:Global.SerializableDictionaryBase`3.SetValue(`2[],System.Int32,`1)
  isExternal: true
  name: SetValue(TValueStorage[], Int32, TValue)
  nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.SetValue(TValueStorage[], Int32, TValue)
  fullName: SerializableDictionaryBase<TKey, TValue, TValueStorage>.SetValue(TValueStorage[], System.Int32, TValue)
  nameWithType.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SetValue(TValueStorage(), Int32, TValue)
  fullName.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SetValue(TValueStorage(), System.Int32, TValue)
  name.vb: SetValue(TValueStorage(), Int32, TValue)
  spec.csharp:
  - uid: Global.SerializableDictionaryBase`3.SetValue(`2[],System.Int32,`1)
    name: SetValue
    nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.SetValue
    fullName: SerializableDictionaryBase<TKey, TValue, TValueStorage>.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - name: TValueStorage
    nameWithType: TValueStorage
    fullName: TValueStorage
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.SerializableDictionaryBase`3.SetValue(`2[],System.Int32,`1)
    name: SetValue
    nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SetValue
    fullName: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SetValue
  - name: (
    nameWithType: (
    fullName: (
  - name: TValueStorage
    nameWithType: TValueStorage
    fullName: TValueStorage
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.SerializableDictionaryBase`3.GetValue(`2[],System.Int32)
  commentId: M:Global.SerializableDictionaryBase`3.GetValue(`2[],System.Int32)
  isExternal: true
  name: GetValue(TValueStorage[], Int32)
  nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.GetValue(TValueStorage[], Int32)
  fullName: SerializableDictionaryBase<TKey, TValue, TValueStorage>.GetValue(TValueStorage[], System.Int32)
  nameWithType.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).GetValue(TValueStorage(), Int32)
  fullName.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).GetValue(TValueStorage(), System.Int32)
  name.vb: GetValue(TValueStorage(), Int32)
  spec.csharp:
  - uid: Global.SerializableDictionaryBase`3.GetValue(`2[],System.Int32)
    name: GetValue
    nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.GetValue
    fullName: SerializableDictionaryBase<TKey, TValue, TValueStorage>.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - name: TValueStorage
    nameWithType: TValueStorage
    fullName: TValueStorage
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.SerializableDictionaryBase`3.GetValue(`2[],System.Int32)
    name: GetValue
    nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).GetValue
    fullName: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).GetValue
  - name: (
    nameWithType: (
    fullName: (
  - name: TValueStorage
    nameWithType: TValueStorage
    fullName: TValueStorage
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.SerializableDictionaryBase`3.CopyFrom(System.Collections.Generic.IDictionary{`0,`1})
  commentId: M:Global.SerializableDictionaryBase`3.CopyFrom(System.Collections.Generic.IDictionary{`0,`1})
  isExternal: true
  name: CopyFrom(IDictionary<TKey, TValue>)
  nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.CopyFrom(IDictionary<TKey, TValue>)
  fullName: SerializableDictionaryBase<TKey, TValue, TValueStorage>.CopyFrom(System.Collections.Generic.IDictionary<TKey, TValue>)
  nameWithType.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).CopyFrom(IDictionary(Of TKey, TValue))
  fullName.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).CopyFrom(System.Collections.Generic.IDictionary(Of TKey, TValue))
  name.vb: CopyFrom(IDictionary(Of TKey, TValue))
  spec.csharp:
  - uid: Global.SerializableDictionaryBase`3.CopyFrom(System.Collections.Generic.IDictionary{`0,`1})
    name: CopyFrom
    nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.CopyFrom
    fullName: SerializableDictionaryBase<TKey, TValue, TValueStorage>.CopyFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.SerializableDictionaryBase`3.CopyFrom(System.Collections.Generic.IDictionary{`0,`1})
    name: CopyFrom
    nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).CopyFrom
    fullName: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).CopyFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.SerializableDictionaryBase`3.OnAfterDeserialize
  commentId: M:Global.SerializableDictionaryBase`3.OnAfterDeserialize
  name: OnAfterDeserialize()
  nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnAfterDeserialize()
  fullName: SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnAfterDeserialize()
  nameWithType.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnAfterDeserialize()
  fullName.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnAfterDeserialize()
  spec.csharp:
  - uid: Global.SerializableDictionaryBase`3.OnAfterDeserialize
    name: OnAfterDeserialize
    nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnAfterDeserialize
    fullName: SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnAfterDeserialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.SerializableDictionaryBase`3.OnAfterDeserialize
    name: OnAfterDeserialize
    nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnAfterDeserialize
    fullName: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnAfterDeserialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.SerializableDictionaryBase`3.OnBeforeSerialize
  commentId: M:Global.SerializableDictionaryBase`3.OnBeforeSerialize
  name: OnBeforeSerialize()
  nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnBeforeSerialize()
  fullName: SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnBeforeSerialize()
  nameWithType.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnBeforeSerialize()
  fullName.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnBeforeSerialize()
  spec.csharp:
  - uid: Global.SerializableDictionaryBase`3.OnBeforeSerialize
    name: OnBeforeSerialize
    nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnBeforeSerialize
    fullName: SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnBeforeSerialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.SerializableDictionaryBase`3.OnBeforeSerialize
    name: OnBeforeSerialize
    nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnBeforeSerialize
    fullName: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnBeforeSerialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.SerializableDictionary`3.#ctor*
  commentId: Overload:Global.SerializableDictionary`3.#ctor
  name: SerializableDictionary
  nameWithType: SerializableDictionary<TKey, TValue, TValueStorage>.SerializableDictionary
  fullName: SerializableDictionary<TKey, TValue, TValueStorage>.SerializableDictionary
  nameWithType.vb: SerializableDictionary(Of TKey, TValue, TValueStorage).SerializableDictionary
  fullName.vb: SerializableDictionary(Of TKey, TValue, TValueStorage).SerializableDictionary
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  commentId: T:System.Collections.Generic.IDictionary{`0,`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Serialization.SerializationInfo
  commentId: T:System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: true
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  commentId: T:System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: Global.SerializableDictionary`3.GetValue*
  commentId: Overload:Global.SerializableDictionary`3.GetValue
  name: GetValue
  nameWithType: SerializableDictionary<TKey, TValue, TValueStorage>.GetValue
  fullName: SerializableDictionary<TKey, TValue, TValueStorage>.GetValue
  nameWithType.vb: SerializableDictionary(Of TKey, TValue, TValueStorage).GetValue
  fullName.vb: SerializableDictionary(Of TKey, TValue, TValueStorage).GetValue
- uid: '{TValueStorage}[]'
  isExternal: true
  name: TValueStorage[]
  nameWithType: TValueStorage[]
  fullName: TValueStorage[]
  nameWithType.vb: TValueStorage()
  fullName.vb: TValueStorage()
  name.vb: TValueStorage()
  spec.csharp:
  - name: TValueStorage
    nameWithType: TValueStorage
    fullName: TValueStorage
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - name: TValueStorage
    nameWithType: TValueStorage
    fullName: TValueStorage
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: '{TValue}'
  commentId: '!:TValue'
  definition: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: Global.SerializableDictionary`3.SetValue*
  commentId: Overload:Global.SerializableDictionary`3.SetValue
  name: SetValue
  nameWithType: SerializableDictionary<TKey, TValue, TValueStorage>.SetValue
  fullName: SerializableDictionary<TKey, TValue, TValueStorage>.SetValue
  nameWithType.vb: SerializableDictionary(Of TKey, TValue, TValueStorage).SetValue
  fullName.vb: SerializableDictionary(Of TKey, TValue, TValueStorage).SetValue
