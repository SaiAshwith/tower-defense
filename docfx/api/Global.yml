### YamlMime:ManagedReference
items:
- uid: Global
  id: Global
  children:
  - Global.AIController
  - Global.EventRegistry
  - Global.GenericMap`1
  - Global.InputSystem
  - Global.IUISystem
  - Global.SerializableDictionary
  - Global.SerializableDictionary.Storage`1
  - Global.SerializableDictionary`2
  - Global.SerializableDictionary`3
  - Global.SerializableDictionaryBase`3
  - Global.SerializableDictionaryPropertyDrawer
  - Global.SerializableDictionaryStoragePropertyDrawer
  - Global.TDEvent
  - Global.TDEvent`1
  - Global.TDEvent`2
  - Global.TestCallback
  - Global.TestEventCall
  - Global.TowerMenuUISystem
  - Global.TowerPlacementSystem
  - Global.TowerPlacer
  - Global.UIManager
  - Global.UpgradeMenuUISystem
  - Global.UpgradeTree
  langs:
  - csharp
  - vb
  name: Global
  nameWithType: Global
  fullName: Global
  type: Namespace
  assemblies:
  - Assembly-CSharp-Editor
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
references:
- uid: Global.SerializableDictionaryPropertyDrawer
  commentId: T:Global.SerializableDictionaryPropertyDrawer
  name: SerializableDictionaryPropertyDrawer
  nameWithType: SerializableDictionaryPropertyDrawer
  fullName: SerializableDictionaryPropertyDrawer
- uid: Global.SerializableDictionaryStoragePropertyDrawer
  commentId: T:Global.SerializableDictionaryStoragePropertyDrawer
  name: SerializableDictionaryStoragePropertyDrawer
  nameWithType: SerializableDictionaryStoragePropertyDrawer
  fullName: SerializableDictionaryStoragePropertyDrawer
- uid: Global.AIController
  commentId: T:Global.AIController
  name: AIController
  nameWithType: AIController
  fullName: AIController
- uid: Global.EventRegistry
  commentId: T:Global.EventRegistry
  name: EventRegistry
  nameWithType: EventRegistry
  fullName: EventRegistry
- uid: Global.GenericMap`1
  commentId: T:Global.GenericMap`1
  name: GenericMap<TKey>
  nameWithType: GenericMap<TKey>
  fullName: GenericMap<TKey>
  nameWithType.vb: GenericMap(Of TKey)
  fullName.vb: GenericMap(Of TKey)
  name.vb: GenericMap(Of TKey)
  spec.csharp:
  - uid: Global.GenericMap`1
    name: GenericMap
    nameWithType: GenericMap
    fullName: GenericMap
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.GenericMap`1
    name: GenericMap
    nameWithType: GenericMap
    fullName: GenericMap
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.TDEvent
  commentId: T:Global.TDEvent
  name: TDEvent
  nameWithType: TDEvent
  fullName: TDEvent
- uid: Global.TDEvent`1
  commentId: T:Global.TDEvent`1
  name: TDEvent<TParam>
  nameWithType: TDEvent<TParam>
  fullName: TDEvent<TParam>
  nameWithType.vb: TDEvent(Of TParam)
  fullName.vb: TDEvent(Of TParam)
  name.vb: TDEvent(Of TParam)
  spec.csharp:
  - uid: Global.TDEvent`1
    name: TDEvent
    nameWithType: TDEvent
    fullName: TDEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TParam
    nameWithType: TParam
    fullName: TParam
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.TDEvent`1
    name: TDEvent
    nameWithType: TDEvent
    fullName: TDEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParam
    nameWithType: TParam
    fullName: TParam
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.TDEvent`2
  commentId: T:Global.TDEvent`2
  name: TDEvent<TParam1, TParam2>
  nameWithType: TDEvent<TParam1, TParam2>
  fullName: TDEvent<TParam1, TParam2>
  nameWithType.vb: TDEvent(Of TParam1, TParam2)
  fullName.vb: TDEvent(Of TParam1, TParam2)
  name.vb: TDEvent(Of TParam1, TParam2)
  spec.csharp:
  - uid: Global.TDEvent`2
    name: TDEvent
    nameWithType: TDEvent
    fullName: TDEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TParam1
    nameWithType: TParam1
    fullName: TParam1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TParam2
    nameWithType: TParam2
    fullName: TParam2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.TDEvent`2
    name: TDEvent
    nameWithType: TDEvent
    fullName: TDEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParam1
    nameWithType: TParam1
    fullName: TParam1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TParam2
    nameWithType: TParam2
    fullName: TParam2
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.TestCallback
  commentId: T:Global.TestCallback
  name: TestCallback
  nameWithType: TestCallback
  fullName: TestCallback
- uid: Global.TestEventCall
  commentId: T:Global.TestEventCall
  name: TestEventCall
  nameWithType: TestEventCall
  fullName: TestEventCall
- uid: Global.InputSystem
  commentId: T:Global.InputSystem
  name: InputSystem
  nameWithType: InputSystem
  fullName: InputSystem
- uid: Global.TowerPlacementSystem
  commentId: T:Global.TowerPlacementSystem
  name: TowerPlacementSystem
  nameWithType: TowerPlacementSystem
  fullName: TowerPlacementSystem
- uid: Global.TowerPlacer
  commentId: T:Global.TowerPlacer
  name: TowerPlacer
  nameWithType: TowerPlacer
  fullName: TowerPlacer
- uid: Global.UpgradeTree
  commentId: T:Global.UpgradeTree
  name: UpgradeTree
  nameWithType: UpgradeTree
  fullName: UpgradeTree
- uid: Global.IUISystem
  commentId: T:Global.IUISystem
  name: IUISystem
  nameWithType: IUISystem
  fullName: IUISystem
- uid: Global.TowerMenuUISystem
  commentId: T:Global.TowerMenuUISystem
  name: TowerMenuUISystem
  nameWithType: TowerMenuUISystem
  fullName: TowerMenuUISystem
- uid: Global.UIManager
  commentId: T:Global.UIManager
  name: UIManager
  nameWithType: UIManager
  fullName: UIManager
- uid: Global.UpgradeMenuUISystem
  commentId: T:Global.UpgradeMenuUISystem
  name: UpgradeMenuUISystem
  nameWithType: UpgradeMenuUISystem
  fullName: UpgradeMenuUISystem
- uid: Global.SerializableDictionaryBase`3
  commentId: T:Global.SerializableDictionaryBase`3
  name: SerializableDictionaryBase<TKey, TValue, TValueStorage>
  nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>
  fullName: SerializableDictionaryBase<TKey, TValue, TValueStorage>
  nameWithType.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage)
  fullName.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage)
  name.vb: SerializableDictionaryBase(Of TKey, TValue, TValueStorage)
  spec.csharp:
  - uid: Global.SerializableDictionaryBase`3
    name: SerializableDictionaryBase
    nameWithType: SerializableDictionaryBase
    fullName: SerializableDictionaryBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValueStorage
    nameWithType: TValueStorage
    fullName: TValueStorage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.SerializableDictionaryBase`3
    name: SerializableDictionaryBase
    nameWithType: SerializableDictionaryBase
    fullName: SerializableDictionaryBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValueStorage
    nameWithType: TValueStorage
    fullName: TValueStorage
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.SerializableDictionary`2
  commentId: T:Global.SerializableDictionary`2
  name: SerializableDictionary<TKey, TValue>
  nameWithType: SerializableDictionary<TKey, TValue>
  fullName: SerializableDictionary<TKey, TValue>
  nameWithType.vb: SerializableDictionary(Of TKey, TValue)
  fullName.vb: SerializableDictionary(Of TKey, TValue)
  name.vb: SerializableDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: Global.SerializableDictionary`2
    name: SerializableDictionary
    nameWithType: SerializableDictionary
    fullName: SerializableDictionary
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.SerializableDictionary`2
    name: SerializableDictionary
    nameWithType: SerializableDictionary
    fullName: SerializableDictionary
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.SerializableDictionary
  commentId: T:Global.SerializableDictionary
  name: SerializableDictionary
  nameWithType: SerializableDictionary
  fullName: SerializableDictionary
- uid: Global.SerializableDictionary.Storage`1
  commentId: T:Global.SerializableDictionary.Storage`1
  name: SerializableDictionary.Storage<T>
  nameWithType: SerializableDictionary.Storage<T>
  fullName: SerializableDictionary.Storage<T>
  nameWithType.vb: SerializableDictionary.Storage(Of T)
  fullName.vb: SerializableDictionary.Storage(Of T)
  name.vb: SerializableDictionary.Storage(Of T)
  spec.csharp:
  - uid: Global.SerializableDictionary.Storage`1
    name: SerializableDictionary.Storage
    nameWithType: SerializableDictionary.Storage
    fullName: SerializableDictionary.Storage
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.SerializableDictionary.Storage`1
    name: SerializableDictionary.Storage
    nameWithType: SerializableDictionary.Storage
    fullName: SerializableDictionary.Storage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.SerializableDictionary`3
  commentId: T:Global.SerializableDictionary`3
  name: SerializableDictionary<TKey, TValue, TValueStorage>
  nameWithType: SerializableDictionary<TKey, TValue, TValueStorage>
  fullName: SerializableDictionary<TKey, TValue, TValueStorage>
  nameWithType.vb: SerializableDictionary(Of TKey, TValue, TValueStorage)
  fullName.vb: SerializableDictionary(Of TKey, TValue, TValueStorage)
  name.vb: SerializableDictionary(Of TKey, TValue, TValueStorage)
  spec.csharp:
  - uid: Global.SerializableDictionary`3
    name: SerializableDictionary
    nameWithType: SerializableDictionary
    fullName: SerializableDictionary
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValueStorage
    nameWithType: TValueStorage
    fullName: TValueStorage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.SerializableDictionary`3
    name: SerializableDictionary
    nameWithType: SerializableDictionary
    fullName: SerializableDictionary
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValueStorage
    nameWithType: TValueStorage
    fullName: TValueStorage
  - name: )
    nameWithType: )
    fullName: )
